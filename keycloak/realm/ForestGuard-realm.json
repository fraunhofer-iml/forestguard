{
  "id": "cbd7a2c3-b5bf-4164-a7fb-912c3bf63ccc",
  "realm": "forest-guard",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "39ebaad7-3df9-44b7-880e-86b3ac5bd216",
        "name": "default-roles-forest-guard",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "cbd7a2c3-b5bf-4164-a7fb-912c3bf63ccc",
        "attributes": {}
      },
      {
        "id": "281725d9-6547-4d71-a6cd-c1a33bb8fea1",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "cbd7a2c3-b5bf-4164-a7fb-912c3bf63ccc",
        "attributes": {}
      },
      {
        "id": "7cdbfd88-358a-4d54-b835-ce99eaf1ea7b",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "cbd7a2c3-b5bf-4164-a7fb-912c3bf63ccc",
        "attributes": {}
      },
      {
        "id": "9693db8d-0e93-4623-8522-5195c222f06d",
        "name": "cooperative",
        "description": "Special access to create farmers und harvests",
        "composite": false,
        "clientRole": false,
        "containerId": "cbd7a2c3-b5bf-4164-a7fb-912c3bf63ccc",
        "attributes": {}
      },
      {
        "id": "91870b6d-30ee-4132-bb7a-56098c0294ed",
        "name": "enabled",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "cbd7a2c3-b5bf-4164-a7fb-912c3bf63ccc",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "3f8d3d51-bd66-4d74-adf1-9f1a1141cd18",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "5ec89be0-d19d-495a-9bba-2162e6030a8a",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "f7780d83-b690-4a64-98d6-67a19f34328d",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "3673e903-0002-4ed2-bfa7-077734246041",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "e444cc07-0bde-481a-9f11-56d5a9d97cad",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "001a5c6a-6c81-439b-a478-75c9bd58ca9e",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "68396ac5-3af0-4e61-a2d4-36cc80f01be1",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "fc900a50-0efc-4913-aa6b-a67618cdec9b",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "3366b0f3-4cb1-4465-a94f-d91a2f9d821c",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "2d19feee-6c14-4668-8ca8-dd4411ce2071",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "d8c64ae7-0e4c-4424-aa10-8b72c5016c16",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "20a29eba-2df1-4c2a-bfe9-05117bc9194f",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "0bbcbd4b-442d-44ff-8ea3-e5cf8ddda3a9",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "b318b4ea-a06c-47f5-a95d-0fc1f1d99f64",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "a380c25c-4984-490b-9986-29b45b31e9a7",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "77cb2ee2-30be-4ed5-bd03-eb7059a46000",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-events",
                "query-groups",
                "query-realms",
                "manage-authorization",
                "manage-users",
                "impersonation",
                "view-events",
                "manage-clients",
                "manage-identity-providers",
                "query-clients",
                "manage-realm",
                "query-users",
                "view-authorization",
                "view-users",
                "view-clients",
                "view-identity-providers",
                "create-client",
                "view-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "e46ae2ef-2df2-4a0c-8363-a1ddae2c14b2",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "2a7b7021-175e-4c06-9471-b9f532130cd6",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        },
        {
          "id": "fce1cab0-6e88-403a-bcdd-fcdfa029a19a",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "efa50f40-6914-4a84-9149-3ecfef112bdf",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "api": [],
      "broker": [
        {
          "id": "b58755c0-0740-4439-b564-c683fe5a39d6",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "2d60aba7-a281-4890-ad28-8e07189794e0",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "dba78930-e909-4de5-8902-2fa3b94ad026",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "7c160041-bf77-46ef-b438-41fd19cf3219",
          "attributes": {}
        },
        {
          "id": "3d0e48db-3286-4b36-beda-4038be42cea6",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "7c160041-bf77-46ef-b438-41fd19cf3219",
          "attributes": {}
        },
        {
          "id": "368b2c08-bba6-4154-b225-9d56c21df4e7",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "7c160041-bf77-46ef-b438-41fd19cf3219",
          "attributes": {}
        },
        {
          "id": "553063b8-dee2-4ea9-8a54-3640347c867d",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "7c160041-bf77-46ef-b438-41fd19cf3219",
          "attributes": {}
        },
        {
          "id": "2e9560fe-e7ef-4e86-8888-43dfd66ade81",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "7c160041-bf77-46ef-b438-41fd19cf3219",
          "attributes": {}
        },
        {
          "id": "899ea9f4-0699-49b0-84ed-ecf48ef65a24",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "7c160041-bf77-46ef-b438-41fd19cf3219",
          "attributes": {}
        },
        {
          "id": "583a97e3-de56-4fc1-a51c-fc0f15f2ebd8",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "7c160041-bf77-46ef-b438-41fd19cf3219",
          "attributes": {}
        },
        {
          "id": "314340da-e4f1-45e9-805f-7e3b75a343d6",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "7c160041-bf77-46ef-b438-41fd19cf3219",
          "attributes": {}
        }
      ],
      "frontend": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "39ebaad7-3df9-44b7-880e-86b3ac5bd216",
    "name": "default-roles-forest-guard",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "cbd7a2c3-b5bf-4164-a7fb-912c3bf63ccc"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": ["totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName"],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "c1c1f27f-75c9-45f8-98f6-cff1357561e1",
      "username": "admin",
      "email": "foo@bar.com",
      "emailVerified": true,
      "createdTimestamp": 1723707585410,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "fbe38560-12bd-4c31-bfda-30bb408df70d",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1723707598519,
          "secretData": "{\"value\":\"5sihm6gnUWb/ZcnHiv4+m4hObMOaW18PImB24mJFxHx94tC6jAMsaLgwekvR32SrCI3KTcmeUVwdOnipMdPCKg==\",\"salt\":\"Xg/k7uOMPqyZ2PW6SvVfBQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-forest-guard", "cooperative", "enabled"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "858c2ddf-f27c-4381-b2b6-3e97d0aec564",
      "username": "cooperative",
      "email": "cooperative@for.com",
      "emailVerified": true,
      "createdTimestamp": 1728568252245,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "a0e6e5a9-0677-4bbf-af97-fd46067e70c4",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1728568418946,
          "secretData": "{\"value\":\"Co6Qq8ajS16qr4UZwCSQ6V6IyM0fCpvnfDUkSm0WaQwEGtRU6saf9IpoHLXLv+7UEzbzD9P+i6rJTdTKxldBUA==\",\"salt\":\"WULCi26sCtc16vfLcnhAeQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-forest-guard", "cooperative", "enabled"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "daa8a435-b0e0-46ef-a95f-080a6cb98d31",
      "username": "exporter",
      "email": "exporter@for.com",
      "emailVerified": true,
      "createdTimestamp": 1728568451142,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "cb14c477-6b9c-48ca-a156-a963425d28a0",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1728568463619,
          "secretData": "{\"value\":\"tNqMp3ShYxD/QvfSbw1e1mlrSk81djb4e09yDp5wMpdIoHW6R3hTWwdkWzgphvO2pPQF0D173FkUjaD2H5psCg==\",\"salt\":\"XzPymlMdauieG8iifFRYpg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-forest-guard", "enabled"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "ec7f6d11-4319-4ea3-8d8c-2dbba2a1d47e",
      "username": "importer",
      "email": "importer@for.com",
      "emailVerified": true,
      "createdTimestamp": 1728568482560,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "fa8f1e88-c835-49ac-8b8f-d1074dff5543",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1728568491466,
          "secretData": "{\"value\":\"nFrUPubmnnBzH8mAodk5/0BoKKYgci2kq/UzahhDGHQ0dNhweA4zWc/Rd+FQTeVRxSqw1YTP9EA25CSZJMXIqA==\",\"salt\":\"l2HWc3GJ91/Lv/utU+/z4w==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-forest-guard", "enabled"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "acb15a08-fd28-42b5-b6c3-c7463f2a4705",
      "username": "roaster",
      "email": "roaster@for.com",
      "emailVerified": true,
      "createdTimestamp": 1728568508606,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "b2a1a52f-d2f3-4738-9f69-c93b08cc8d70",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1728568520493,
          "secretData": "{\"value\":\"HxvoiGviZ5lkermSWsL1DnKH1G+4J3bW4DmLs8QI1Mz4ovncAFGVUJJLUq2nXRt3AI9+b8ctWaZjJoSUxutmLA==\",\"salt\":\"nD7h4MVLzGyZNXa7Ol91cQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-forest-guard", "enabled"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1bd6751f-4007-4168-b252-81c970a45af6",
      "username": "service-account-api",
      "emailVerified": false,
      "createdTimestamp": 1723707399671,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "api",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-forest-guard", "cooperative", "enabled"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "0bc9f319-4e75-437f-8117-da681244f6cb",
      "username": "trader",
      "email": "trader@for.com",
      "emailVerified": true,
      "createdTimestamp": 1728568554899,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "20d59c8d-96b2-4028-a093-90e449930147",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1728568568935,
          "secretData": "{\"value\":\"7Ri386eXEIvzbmh5GgRw1byj1vvSMl0TK4av6rAiFOyQZklRmb/SzgfznFujUNf9H1QG29yB96Fg2uUL3gvF5A==\",\"salt\":\"Bh2lJdJRvVcB04pUPwmXYw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-forest-guard", "enabled"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "7c160041-bf77-46ef-b438-41fd19cf3219",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/forest-guard/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/forest-guard/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "8cf318f3-3fee-4c0b-b4d8-170c107f30c4",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/forest-guard/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/forest-guard/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "7da00db8-1c6c-4083-bddc-c10874652ea8",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "4d3478a4-7de6-4df3-bb34-6607776c2ab0",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "d07b0dcc-8d86-432f-8d79-34c48bdb4d40",
      "clientId": "api",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "BBSCFxCigdhm1vXSKetWYhaiJiZ8J0OY",
      "redirectUris": ["/*"],
      "webOrigins": ["/*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "true",
        "client.secret.creation.time": "1723541680",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "4a6c489c-c402-444a-a015-8a82058437a3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c6907770-0dfc-496b-bb7d-45a11255d545",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e23d9dc2-22e9-4c1f-b749-4f688198ca77",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "2d60aba7-a281-4890-ad28-8e07189794e0",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "8057c749-6641-4901-aeee-b1d57b1920a0",
      "clientId": "frontend",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:4200/*"],
      "webOrigins": ["*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1723707026",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "true",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "efa50f40-6914-4a84-9149-3ecfef112bdf",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "0eb92167-c67a-4c70-82c6-0cb5d7181bb2",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/forest-guard/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/forest-guard/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "48761762-6ea7-408a-ae4e-94bb45e2f4a6",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "roles", "profile", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }
  ],
  "clientScopes": [
    {
      "id": "5eb672e1-3daf-4ad6-985d-7abe8dcf14b2",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "059cbe20-92d0-4884-9e92-b3164bf49385",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8d2f67a2-1c62-4cf6-9906-3c98bb056a70",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "92590b13-df93-4f61-81aa-735c181854af",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "f5d798b2-bc58-4382-8d81-4b5dde52fa8a",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6c79462a-108a-46ad-8e1d-6d67fa6f2cae",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a1e33f71-692b-4f23-9d3a-6525b49d3fb6",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "176f0ae0-3717-4885-963a-f63797516d40",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "57ce866d-d96f-4ea6-95bc-5331f19b9798",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d53f8152-c6bf-46cf-86e9-03b63ae64934",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "5f7fd0e5-ace8-4b2b-afb5-815ab538f35f",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "888b0595-ec8f-49de-962d-d51db17d6ff7",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6ba1e065-6acf-4515-9c34-43794fdf1b53",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "23ace8dc-ef48-4c35-8d70-48c278b72bf4",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6a00f013-b7e7-4572-8ac3-185988ced0b9",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "62a324d8-a042-4812-ab1a-6e2c6f9e7a1f",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8666c48e-3d23-432e-9319-389314d17ab2",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6ee6a1fb-0fd9-4459-95a1-f9b9571c3d56",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "c1b52d16-f7f2-48b4-ad13-4111cb274b6f",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "a314113c-ea37-4c9e-9a59-c7a8fdcf3e37",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "70b8d023-1d44-4165-ab10-40d84d878991",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "f3dc492e-4c59-41ad-b708-6d55fb1e1bf4",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "203eb550-a30c-4435-9b54-0fabd6c8d50e",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dd5f72b7-2ec0-497e-aeb5-4b6d02cdb0c0",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "57ce6ff7-c7d5-4eb7-b48b-f6cd89340421",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "0179b804-89d5-4c3b-920c-b3de6c5097a4",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "98bb2457-635e-4c04-9161-b2ac1aed4902",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "19e9bd1e-0151-40f8-8596-30fcb8a5ffa4",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "66ce12b4-5d72-4399-bcb1-32c6591d09d8",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6aef4814-a83f-4ba4-9388-8fc9a149d5cb",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "ece2413a-027b-4636-acc3-05af44062925",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "325aaa1d-dd2a-4fef-a01e-e4a9fbab4f0c",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8c296b9c-4f81-408b-82d3-101f755fe1de",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "13b78abc-02fc-4559-ba8a-754b733216e2",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "9353e653-c01c-4d22-a63a-21d3a2d8e62c",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "aea5260b-d971-4580-aa37-0998feaea971",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5adf87e6-605c-47bb-a1a7-2fe1d250d2f8",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["role_list", "profile", "email", "roles", "web-origins", "acr"],
  "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt"],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c116b6a6-fbe1-4ce5-a5e5-999b70dca06f",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "d163b9f4-b88a-4d0c-af9e-2d7a5024c6da",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "71359eda-c0bf-4a32-b015-c61c028a259e",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "6172d388-eeb6-4aee-a135-200b29ff4c97",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "38f70e27-4c70-4252-817b-90c6e8bbcb58",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "7a78e3db-129a-4b1d-872e-cfc964ca311c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "0a9a7cd7-1d5c-45c6-ad5d-0d5a80135814",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "20af8ad3-fc3e-4b1e-ada4-6a282600e428",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "487e5f5f-5be5-419f-a271-b5649e00abd1",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "237cf059-c994-4a1b-9146-60d63d569d88",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["6a5f0f17-e4ec-43cd-a280-bd81863701c1"],
          "secret": ["A9q3sIDawd8eUHTxtTEgcQ"],
          "priority": ["100"]
        }
      },
      {
        "id": "9d298667-139c-4273-ae2e-bfc42bab335d",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["d07e798f-3551-4dd8-941a-67d34133bc71"],
          "secret": [
            "WVy5jOZGXi9a-qdzANjnQnGc9tb7VWJYRZCKaYD7ao-9wHNObMOkB7XaohXvUvKvyZL3O717baXSkcKQWvB2oo54ver6zv53kJ62mN8VfQ0hBgvvaPcBuH7yzOLITcg0NkzMeNTbpgouUSh6gFOi6a184l9kiFK1iZQusMKG5d0"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "b8b87979-edb9-4a2b-ab55-a8ef86b4bcc4",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAmvTuJiUleXUi/Z+3sjrXbrFAugzDgax/7JmV3JsbwY9hIZCIq8SurcSLDUCCBzPdjVtm+RVaVjNDcQqYTteiywZU1WI9QobAjLp1gdjuJmwkbaadgZJd4IRKwCVJd3s2T7ixKc8DLioyLZmQNG600SG8W6nWl0J1AI1GpP5EbtQuYKTQrtFVqihrGwyJZLeyDNaTXiegHlrYTzVHoKO5k+sCdxmiyAT6E1Az8yWUY7aoUHygdPNrBG5E/NoENzz8xhrVT3IMRMa63QFtO5r9IHBOjHXEitfvDT7pcWQkaO6XxccZ/4dtWIiwsNLu2dwHwAIWTGA6ngTcR9NAKi5e6QIDAQABAoIBAAI/t8P1YzKzx6aCqgwgbxCOM7ltPWyS8AvH3/5ZpV5WEhcYnZ6ZtidKUhbiSjesiwbl4rKzUX2/WUnLkCQJXJDonAsnDGrXnKxb50Su4ZXxK0dR1SbLZwQ+3iEle6znY3NB484OrIFtljRGEyH9Y51GiX63pJXvHmi77U5CkU1nBSNtvjHwoSlAKpg1Kwf+dzBmFCu1hw6VceHZFX7vGd+nirH0EtH+WN9e1JMiXv3jexFc0LcgEkumJ3KwxKFr8TMZedSX5jSn1KQ4AIvASyawLQ8J5E6tl95dBiBVvJeNeOp2i7IA3I1NG9W/AOnvUzY2kCY2hxLbxK/nbuRnurkCgYEA1qfb+sVPEfug64X5+iOv9d+IkDpCyjzBEFTiSXNlTkByq1b8+DyP1gmHXLD5yHS1MfWuXx2tSOY1hwPACRB60Aacb1L1ZoBI0bzktA3eNwBhBOs11LF3OeqXviBP47NFozL6ZZHIEk5toWBmQATBwbo1CtwBGEvoXo7PiOPWfksCgYEAuM12zsTWGLoXa3zWA3HX5Hh6sRFxM9Kzas/E55A1DP9EpXf0n68OPwd7CGg2c6jSmoBdRKniKlg8rSKlbf0nvwn7V1tM6IVskQ/KPA1KVan3+mdRpWkNvTi2uZm1paPNR6SN/RruHXnHZPs5cZkiHcZD6VEy4LyLgM9cKtJxBxsCgYApbtktPGyYwgM7su6fc8gBI5aOkFBYDQYPCvNqzhVd117K582IdNgmrkwsfhSYtr5K2GtB/M535cerOfQVS9MI2F3VtyObF2P26AkVICAmabJQar5HQcILsdZ8YmxJPU9RwwNGG6+MqQrMPXk/HivwIuseH30unWhK6DHy8Fd0pQKBgH/LVcVWyNcAmQFzqmtnZmxQBEg+T5IOupO6aefYCVebjtT+RuPGIovjmGkP59fDfx/odJbvA79UlWEE/HE7BylMtcqLEHwbCCCoUqmEZ0sl5p36pLNGGoInnfRrHvoUc/h/CtFkthUcCY8DS44K31THrl7CD/TpbW799jaGoDLRAoGBALX75LQjafIWpeXpRXAT9kRMP5eDfZ53Rw3Ovt6CSdrR+iwMyfawl7uF6+hHIlG7mStYVTAaGKDLMqntIewdNvsQiztnrqbsq/CWEQp7hejJD10iyx0nQD62DlroM7wjJGBsTw9GIScQnnvgpjISRJuqZclcsiPMM2LbHvsG3fxh"
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICpTCCAY0CBgGRSxau0jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtGb3Jlc3RHdWFyZDAeFw0yNDA4MTMwOTMyNDNaFw0zNDA4MTMwOTM0MjNaMBYxFDASBgNVBAMMC0ZvcmVzdEd1YXJkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmvTuJiUleXUi/Z+3sjrXbrFAugzDgax/7JmV3JsbwY9hIZCIq8SurcSLDUCCBzPdjVtm+RVaVjNDcQqYTteiywZU1WI9QobAjLp1gdjuJmwkbaadgZJd4IRKwCVJd3s2T7ixKc8DLioyLZmQNG600SG8W6nWl0J1AI1GpP5EbtQuYKTQrtFVqihrGwyJZLeyDNaTXiegHlrYTzVHoKO5k+sCdxmiyAT6E1Az8yWUY7aoUHygdPNrBG5E/NoENzz8xhrVT3IMRMa63QFtO5r9IHBOjHXEitfvDT7pcWQkaO6XxccZ/4dtWIiwsNLu2dwHwAIWTGA6ngTcR9NAKi5e6QIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBp2ZUTfjGnnjqjRUmvp+LFAR83DFolqQOQsUdj2/6neTrm+m1TtkFt5qBmlLZ4HaY7dhIYPeqqXpxeEbEzg4BVh3pTyHu2fwnJZbsp7EmyBmwOa1KasJQg/mjbN+YnkbrSY7wlXEDSK2UyZw/99LK2CJctKO3SFOHvL4iyIy+qoVFxdXNrNX3gwJ7/OipMDf25qOd0SdFuEUaeHaTUiqlkkQXzCmHqPNvnlGg2GJHxVrrSQhihx9KDgxDZQOrDX5adddZGIPuNqT+mqjYJAFAsPYggh8U8KKaJT5SfdB/eD7iiYOX5H37nhDlcP4xhEaPI3Mo2VKIinlqcznvETz21"
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "4ab109d6-97d1-4b4b-b056-c8f0e641d6b3",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAs4/6ugn9jxgH5qC1RrTkeNYyfT7qOajs5R10dImYOvtbc/ff9BJoVXnOf0CyDa96Y5rrJ5d7/OkJcXZgV4HA9F7FOryuKiUXek4yGl717hQqexxEqNvDoQUcQt1GFZfI5rmW+pPOhddEFYCOnBUSk4zBMnJBqCbbU580863tshXefYEgzwAGCw8UlSCcXp9DfmuyL6ghOMT72ddCaG0NYflQ6ooxLck4iRteajWZ6pl/22vik+MZ0V/2HE7oNq8pYw+Pxq3wyx2KoanR8nqI90kv6WKI3MEDFV+U9LCU8fZQZzP7eYo+ekDNZlcP4fY/dZwg//fgPX/BcjpvPC1KUQIDAQABAoIBAAKTq+D0mL9vdFmSb9eKbAbx5/qVJw5ZxsCI+i1b9iPOjKLu6Tda9kVXwKdh2cxJeuOoCvzf9ycLfxeyP7KxyX+YRpNPtt4i9yHJsn1fZH8cqflnT/LuaHHMnXm2LDXOHlN1UV3aNioEi1UVqbZCtSgJ6pHbQubzW81o6P0gP1uBX6vujPb8Asnq+vq8OB2EcNmeftOWR8WL/tAqD2rTUMRU82My0yhcZG0L2kreEbiQNPyr6+bY3aScAlDZGmWs3guoArNv8rSQTvTWr258IoaQ/qUwZ7lAxvLvU/IIF0k8KJr0gVpa1d9Mh9njKL/PplP77Sqmf7DT8TnZ5ypO4SECgYEA5JgVJ6awT+FnROIlmlDSWLewVrWKJsk1/8kw4DMXR2CF04YrCQgLDIRSrJ8k3/yGh0m9miyjW9KwTjIk3eqhDuBNd8G1fc3T5lb90IxW5H0of01Dqojz6FdmHQh4H6xtzqNH+6qs/SRhbPch/lXlMgAm0in/rGDDjfiYKmaVEqkCgYEAyRcJd3Ja7u9VF4AGnfUmxxozrr8W8Iwz1lKORaiuwZxFbdYXePBhAMGcpIgkko/HJppqfHSmXNPo+TQ5N2fiFXf9vlhboCuxepsRME5wq8WFNWQrr3d1ZwkGbil0ZAjZQaHeCI5wUK2LxZPQl1bhPo3AHuiR5nhCPiWgW+nca2kCgYA3/VgRIi7FIfxdTtbO+UTMHhG+6zAvV9E2GV0zTNBC101wBci8qY+rPS3SwhgSFJQOxuz9ujk44F32iSmmgTV5o07WKkf9zFA+dsgsMHOH+2/T3mTYfDrhiaalLdHeUCmFF1EmPyOnzSVfvxhAZ2F/4bGggFDzM7AyMdVzbTTOIQKBgQCxfpMNirO3CSurlYbBsBztSzRpPyRJaQdsWuxXkh/Gp2AlJf8L8ek9WKgiFkVp1FzttwjdF72sXCPcq3sBa8GEP6iKdcVSaJ68YNlYMTSEedEtomBo/eFz8+RoIlEo5yKVKwInvUpn+/dOiz1oB/jDVS1KWvBFZMrbviyAVLkJWQKBgQCDPzWAIjgm+MPV6Ik/URXTsuCZZzVqSPzML1nrlGJPaPHfURHgXULbpCK3etlhxp/VlRJ6e3kv2Qk7tFrPeVfsdhbYx1J1CSOnR6gigGm+i8EY6l6a1j4gt/4PXES92mng/KtIuaB+yRBkW6PFCNzT5id00JEN/1Opov5FicLvmw=="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICpTCCAY0CBgGRSxavgzANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtGb3Jlc3RHdWFyZDAeFw0yNDA4MTMwOTMyNDNaFw0zNDA4MTMwOTM0MjNaMBYxFDASBgNVBAMMC0ZvcmVzdEd1YXJkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs4/6ugn9jxgH5qC1RrTkeNYyfT7qOajs5R10dImYOvtbc/ff9BJoVXnOf0CyDa96Y5rrJ5d7/OkJcXZgV4HA9F7FOryuKiUXek4yGl717hQqexxEqNvDoQUcQt1GFZfI5rmW+pPOhddEFYCOnBUSk4zBMnJBqCbbU580863tshXefYEgzwAGCw8UlSCcXp9DfmuyL6ghOMT72ddCaG0NYflQ6ooxLck4iRteajWZ6pl/22vik+MZ0V/2HE7oNq8pYw+Pxq3wyx2KoanR8nqI90kv6WKI3MEDFV+U9LCU8fZQZzP7eYo+ekDNZlcP4fY/dZwg//fgPX/BcjpvPC1KUQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCPsCKG6MUnNRICDgsN/PktHQiEZJsCzW0utVlvmRBAQTRYkbCMhkAKv+G/fQMFnAV7WzBUiMah2xF8ML4SWl2bWQWh6taLP7FDp9ML3cDq/ESgVF7Dc3PNqH+n4IukrRMnxUEMuGhGCizaBNtQB/+UMHaPct88CsspR6HwEYzExdKYYwuUyzyy8HZKO7f7vbJo7++JuilcXxE8fTi8gyBkKRI4gTTMvyuTyvAT6wBZnb+cxiQUc0O2vuqIBs5fAztUULQjlGZlzmvipGfs8GgFLSHCxT2VZ6Yqy1FO/ksBUfF4PAHoo9E2LFZu4lv6xmlhzqNEVLyFeU1Jh6iToIEv"
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "223e04a0-210b-49bc-81dd-7695ebf8530a",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6ea40c08-6c9c-4761-b13f-638b62907da0",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "14151cc7-536f-4854-902b-1d6f4e2c5907",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dccf2002-aaec-42e7-a8f6-67587cd4d105",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fee1a306-035f-4557-b1c0-ef7e3b4e84a6",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "31037c46-49ee-4f2e-9352-fb432c65b367",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "086da652-3500-4897-a76e-a8cd54095746",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ad3ad124-1bdb-47a1-8220-a83cafe57233",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d6f4639d-ac3a-4e29-b287-179496335079",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c00aef7d-dcdf-41d0-aa8f-707fa134d931",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "84944ef7-bb43-4c0c-bf0e-d50e91c701a1",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "51540710-b6f4-415e-98a5-3eaeea0b38b9",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d024d6ab-be2e-429b-a314-393c318e59aa",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "25540079-bbed-4fe0-9a5e-128846d6be06",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "160578bf-2205-4486-a0a2-aabf3664b7ad",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "377e5b61-3325-45c8-acd7-d9f2c7bc80bc",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c03388db-158e-46f8-a391-7701ae169398",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3f573dc3-00bc-4271-b39d-3c7536751db6",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "2e9fa4f2-d49f-4630-91a7-8d34a444b2ce",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "f640dcd1-56ea-441e-9200-b6066034b48b",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "24.0.5",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
