openapi: 3.0.0
paths:
  /auth/login:
    post:
      operationId: AuthenticationController_login
      summary: ''
      description: Login with email and password.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '200':
          description: Successful login.
      tags:
        - Authentication
  /auth/register:
    post:
      operationId: AuthenticationController_register
      summary: ''
      description: Register with email and password.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationDto'
      responses:
        '201':
          description: Successful registration.
      tags:
        - Authentication
  /batches:
    post:
      operationId: BatchController_createBatches
      summary: ''
      description: Create coffee batches
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '201':
          description: Successful creation.
      tags:
        - Batches
  /batches/harvests:
    post:
      operationId: BatchController_createHarvests
      summary: ''
      description: Create harvest batches
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '201':
          description: Successful creation.
      tags:
        - Batches
  /batches/harvests/combined:
    post:
      operationId: BatchController_createCombinedHarvests
      summary: ''
      description: Create harvest batches to multiple plot of lands
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCombinedCreateDto'
      responses:
        '201':
          description: Successful creation.
      tags:
        - Batches
  /batches/{id}:
    get:
      operationId: BatchController_getBatch
      summary: ''
      description: Get coffee batch by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - Batches
  /batches/{id}/related:
    get:
      operationId: BatchController_getRelatedBatches
      summary: ''
      description: Get all coffee batches that are related to the coffee batch
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - Batches
  /batches/{id}/export:
    get:
      operationId: BatchController_getExportBatch
      summary: ''
      description: >-
        Export batch file with all batch information and all previous and next
        batches
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - Batches
  /companies:
    post:
      operationId: CompanyController_createCompany
      summary: ''
      description: Create a company
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyCreateDto'
      responses:
        '201':
          description: Successful creation.
      tags:
        - Companies
    get:
      operationId: CompanyController_getCompanies
      summary: ''
      description: Get all companies
      parameters:
        - name: filters
          required: false
          in: query
          examples:
            noFilter:
              value: null
              description: Apply no filters
            name:
              value:
                name:
                  contains: foo
              description: Filter for companies that contain the string "foo"
          schema:
            type: string
        - name: sorting
          required: false
          in: query
          examples:
            noSorting:
              value: null
              description: Apply no specific sorting
            id:
              value:
                id: desc
              description: Sort by descending company id
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - Companies
  /companies/{id}:
    get:
      operationId: CompanyController_getCompany
      summary: ''
      description: Get company by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - Companies
  /companies/{id}/batches:
    get:
      operationId: CompanyController_getBatches
      summary: ''
      description: Get all coffee batches of the company
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: sorting
          required: false
          in: query
          example:
            processStep:
              date: desc
          schema: {}
        - name: query
          required: false
          in: query
          example:
            active: true
          schema: {}
      responses:
        '200':
          description: Successful request.
      tags:
        - Companies
  /companies/{id}/farmers:
    get:
      operationId: CompanyController_getFarmers
      summary: ''
      description: Get all farmers related to the company
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - Companies
  /cultivations:
    post:
      operationId: CultivationController_createCultivation
      summary: ''
      description: Create a cultivation
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CultivationCreateDto'
      responses:
        '201':
          description: Successful creation.
      tags:
        - Cultivations
    get:
      operationId: CultivationController_getCultivationsByType
      summary: ''
      description: Get all cultivations
      parameters:
        - name: type
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - Cultivations
  /cultivations/types:
    get:
      operationId: CultivationController_getCultivationTypes
      summary: ''
      description: Get all cultivation types
      parameters: []
      responses:
        '200':
          description: Successful request.
      tags:
        - Cultivations
  /pols:
    get:
      operationId: PlotOfLandController_getPlotsOfLand
      summary: ''
      description: Get all plot of lands of a farmer
      parameters:
        - name: farmerId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - PlotOfLands
    post:
      operationId: PlotOfLandController_createPlotOfLand
      summary: ''
      description: Create a plot of land for a farmer
      parameters:
        - name: farmerId
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlotOfLandCreateDto'
      responses:
        '201':
          description: Successful creation.
      tags:
        - PlotOfLands
  /pols/{id}:
    get:
      operationId: PlotOfLandController_getPlotOfLandById
      summary: ''
      description: Get plot of land by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - PlotOfLands
    patch:
      operationId: PlotOfLandController_createOrUpdatePlotOfLand
      summary: ''
      description: Create or update the seeding for a plot of land
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlotOfLandUpdateDto'
      responses:
        '200':
          description: Successful creation.
      tags:
        - PlotOfLands
  /pols/{id}/proofs:
    post:
      operationId: PlotOfLandController_postProof
      summary: ''
      description: Create a proof for a plot of land
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: >-
          The proof of the given plot of land. Either of type `PROOF_OF_FREEDOM`
          of `PROOF_OF_OWNERSHIP`.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProofUploadDto'
      responses:
        '201':
          description: Successful creation.
      tags:
        - PlotOfLands
    get:
      operationId: PlotOfLandController_getProofsByPlotOfLandId
      summary: ''
      description: Get all proofs of a plot of land
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - PlotOfLands
  /processes:
    get:
      operationId: ProcessController_getProcesses
      summary: ''
      description: Get all processes
      parameters: []
      responses:
        '200':
          description: Successful request.
      tags:
        - Processes
    post:
      operationId: ProcessController_createProcess
      summary: ''
      description: Create a process
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessCreateDto'
      responses:
        '201':
          description: Successful creation.
      tags:
        - Processes
  /users:
    get:
      operationId: UserController_getUsers
      summary: ''
      description: Get all users
      parameters: []
      responses:
        '200':
          description: Successful request.
      tags:
        - Users
    post:
      operationId: UserController_createUser
      summary: ''
      description: Create a user object
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDto'
      responses:
        '200':
          description: Successful creation.
      tags:
        - Users
  /users/{id}:
    get:
      operationId: UserController_getUser
      summary: ''
      description: Get user by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
      tags:
        - Users
  /users/farmers:
    post:
      operationId: UserController_createFarmer
      summary: ''
      description: Create a farmer
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmerCreateDto'
      responses:
        '201':
          description: Successful creation.
      tags:
        - Users
info:
  title: ForestGuard API
  description: ''
  version: '0.1'
  contact: {}
tags: []
servers: []
components:
  schemas:
    LoginDto:
      type: object
      properties: {}
    RegistrationDto:
      type: object
      properties: {}
    BatchCombinedCreateDto:
      type: object
      properties: {}
    CompanyCreateDto:
      type: object
      properties: {}
    CultivationCreateDto:
      type: object
      properties: {}
    PlotOfLandCreateDto:
      type: object
      properties: {}
    PlotOfLandUpdateDto:
      type: object
      properties: {}
    ProofUploadDto:
      type: object
      properties:
        type:
          type: object
        file:
          type: string
          format: binary
      required:
        - type
        - file
    ProcessCreateDto:
      type: object
      properties: {}
    UserUpdateDto:
      type: object
      properties: {}
    FarmerCreateDto:
      type: object
      properties: {}
